name: "Terraform action"
on:
  workflow_run:
    workflows: ["deploy1"]
    types:
      - manual
  workflow_dispatch:
  push:
    branches:
      - main
      - feature
  pull_request:
permissions:
  id-token: write # This is required for aws oidc connection
  contents: read # This is required for actions/checkout
  pull-requests: write # This is required for gh bot to comment PR
env:
  TF_LOG: INFO
  AWS_REGION: ${{ secrets.AWS_REGION }}
jobs:
  deploy:
    #if: startsWith(github.ref, 'refs/heads/feature')
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: .
    steps:
      - name: Git checkout
        uses: actions/checkout@v3

      - name: Configure AWS credentials from AWS account
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.AWS_ROLE }}
          aws-region: ${{ secrets.AWS_REGION }}
          role-session-name: GitHub-OIDC-TERRAFORM

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.2.5


      - name: dev deploy
        id: init
        #env:
        #  AWS_BUCKET_NAME: ${{ secrets.AWS_BUCKET_NAME }}
        #  AWS_BUCKET_KEY_NAME: ${{ secrets.AWS_BUCKET_KEY_NAME }}
        if: github.ref == 'refs/heads/main'
        run: |
          cd iac-scripts
          #terraform init -backend-config="bucket=${AWS_BUCKET_NAME}" -backend-config="key=${AWS_BUCKET_KEY_NAME}" -backend-config="region=${AWS_REGION}"
          terraform init
          terraform apply -input=false -auto-approve -var-file="dev.tfvars"

      - name: test deploy
        id: init1
        #env:
         # AWS_BUCKET_NAME: ${{ secrets.AWS_BUCKET_NAME }}
          #AWS_BUCKET_KEY_NAME: ${{ secrets.AWS_BUCKET_KEY_NAME }}
        if: github.ref == 'refs/heads/main'
        run: |
          cd iac-scripts
          #terraform init -backend-config="bucket=${AWS_BUCKET_NAME}" -backend-config="key=${AWS_BUCKET_KEY_NAME}" -backend-config="region=${AWS_REGION}"
          #terraform apply -input=false -auto-approve -var-file="dev.tfvars"
          terraform init
          terraform apply -input=false -auto-approve -var-file="test.tfvars"

  deploy1:
    if: startsWith(github.ref, 'refs/heads/feature')
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: .
    steps:
      - name: Git checkout
        uses: actions/checkout@v3

      - name: Configure AWS credentials from AWS account
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.AWS_ROLE }}
          aws-region: ${{ secrets.AWS_REGION }}
          role-session-name: GitHub-OIDC-TERRAFORM

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.2.5


      - name: Terraform Init
        id: init
        env:
          AWS_BUCKET_NAME: ${{ secrets.AWS_BUCKET_NAME }}
          AWS_BUCKET_KEY_NAME: ${{ secrets.AWS_BUCKET_KEY_NAME }}
        if: github.ref == 'refs/heads/feature'
        run: |
          cd iac-scripts
          terraform init -backend-config="bucket=${AWS_BUCKET_NAME}" -backend-config="key=${AWS_BUCKET_KEY_NAME}" -backend-config="region=${AWS_REGION}"
          terraform apply -input=false -auto-approve -var-file="dev.tfvars"
